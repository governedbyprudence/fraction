<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>res package</title>
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="res-package">
<h1>res package</h1>
<div class="section" id="submodules">
<h2>Submodules</h2>
</div>
<div class="section" id="module-res.main">
<span id="res-main-module"></span><h2>res.main module</h2>
<dl class="py class">
<dt id="res.main.fraction">
<em class="property">class </em><code class="sig-prename descclassname">res.main.</code><code class="sig-name descname">fraction</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">numerator</span></em>, <em class="sig-param"><span class="n">denominator</span></em><span class="sig-paren">)</span></dt>
<dd><p>An implementation of fractions</p>
<dl class="py method">
<dt id="res.main.fraction.__add__">
<code class="sig-name descname">__add__</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">frac</span></em><span class="sig-paren">)</span></dt>
<dd><p>You can add two fractions</p>
</dd></dl>

<dl class="py method">
<dt id="res.main.fraction.__eq__">
<code class="sig-name descname">__eq__</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">frac</span></em><span class="sig-paren">)</span></dt>
<dd><p>Return self==value.</p>
</dd></dl>

<dl class="py method">
<dt id="res.main.fraction.__ge__">
<code class="sig-name descname">__ge__</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">frac</span></em><span class="sig-paren">)</span></dt>
<dd><p>Return self&gt;=value.</p>
</dd></dl>

<dl class="py method">
<dt id="res.main.fraction.__gt__">
<code class="sig-name descname">__gt__</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">frac</span></em><span class="sig-paren">)</span></dt>
<dd><p>Return self&gt;value.</p>
</dd></dl>

<dl class="py method">
<dt id="res.main.fraction.__init__">
<code class="sig-name descname">__init__</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">numerator</span></em>, <em class="sig-param"><span class="n">denominator</span></em><span class="sig-paren">)</span></dt>
<dd><p>This is where we initialize the fraction object. The numerator and denominator should be 
provided here.</p>
</dd></dl>

<dl class="py method">
<dt id="res.main.fraction.__le__">
<code class="sig-name descname">__le__</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">frac</span></em><span class="sig-paren">)</span></dt>
<dd><p>Return self&lt;=value.</p>
</dd></dl>

<dl class="py method">
<dt id="res.main.fraction.__lt__">
<code class="sig-name descname">__lt__</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">frac</span></em><span class="sig-paren">)</span></dt>
<dd><p>Return self&lt;value.</p>
</dd></dl>

<dl class="py method">
<dt id="res.main.fraction.__mul__">
<code class="sig-name descname">__mul__</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">frac</span></em><span class="sig-paren">)</span></dt>
<dd><p>You can multiply two fractions</p>
</dd></dl>

<dl class="py method">
<dt id="res.main.fraction.__ne__">
<code class="sig-name descname">__ne__</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">frac</span></em><span class="sig-paren">)</span></dt>
<dd><p>Return self!=value.</p>
</dd></dl>

<dl class="py method">
<dt id="res.main.fraction.__neg__">
<code class="sig-name descname">__neg__</code><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Overloaded - unary operator</p>
</dd></dl>

<dl class="py method">
<dt id="res.main.fraction.__pos__">
<code class="sig-name descname">__pos__</code><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Overloaded + unary operator</p>
</dd></dl>

<dl class="py method">
<dt id="res.main.fraction.__pow__">
<code class="sig-name descname">__pow__</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">n</span><span class="p">:</span> <span class="n">int</span></em><span class="sig-paren">)</span></dt>
<dd><p>You can raise the fraction to any power</p>
</dd></dl>

<dl class="py method">
<dt id="res.main.fraction.__str__">
<code class="sig-name descname">__str__</code><span class="sig-paren">(</span><span class="sig-paren">)</span></dt>
<dd><p>Return str(self).</p>
</dd></dl>

<dl class="py method">
<dt id="res.main.fraction.__sub__">
<code class="sig-name descname">__sub__</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">frac</span></em><span class="sig-paren">)</span></dt>
<dd><p>You can substract two fractions</p>
</dd></dl>

<dl class="py method">
<dt id="res.main.fraction.__truediv__">
<code class="sig-name descname">__truediv__</code><span class="sig-paren">(</span><em class="sig-param"><span class="n">frac</span></em><span class="sig-paren">)</span></dt>
<dd><p>You can divide two fractions</p>
</dd></dl>

<dl class="py attribute">
<dt id="res.main.fraction.__weakref__">
<code class="sig-name descname">__weakref__</code></dt>
<dd><p>list of weak references to the object (if defined)</p>
</dd></dl>

</dd></dl>

</div>
<div class="section" id="module-res">
<span id="module-contents"></span><h2>Module contents</h2>
</div>
</div>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>